@startuml ebikes-microservice-domain-model

title EBikes microservice domain model

class EBike {
    location: V2D
    direction: V2D
    speed: Double
}
struct EBikeId {
    value: String
}
EBike "1" -u-> "id 1" EBikeId

class EBikesEventStore <<Repository>>
EBikesEventStore o-l- EBike

class EBikesService <<Service>> {
    find(eBikeId: EBikeId): Future<EBike?>
    eBikes(): Future<Iterable<EBike>>
    register(eBikeId: EBikeId, location: V2D, direction: V2D): Future<Either<EBikeIdAlreadyInUse, EBike>>
    updatePhisicalData(eBikeId: EBikeId, location: V2D, direction: V2D, speed: Double): Future<Either<EBikeNotFound, Unit>>
    ..
    healthCheckError(): Option<String>
}

EBikesService --> EBikesEventStore : "uses"

hide empty members

@enduml
