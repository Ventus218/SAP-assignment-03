@startuml users-microservice-domain-model

title Users microservice domain model

!includesub cqrs-es-domain-model.puml!ES

hide empty members

interface UserCommands<Username, User, UserCommandErrors> extends Command

enum UserCommandErrors {
    UsernameAlreadyInUse(username: Username)
}

struct Registered extends UserCommands {
    id: CommandId
    entityId: Username
    apply(previous: Option<User>): Either<UsernameAlreadyInUse, Option<User>>
}

struct User<Username> extends Entity

struct Username {
    value: String
}

class UserCommandsRepository <<Repository>>

class UsersService <<Service>> {
    registerUser(username: Username): Future<CommandId>
    users(): Iterable<User>
    ..
    healthCheckError(): Option<String>
}

class UsersCommandSideKafkaAdapter
class UsersQuerySideKafkaAdapter

User "1" -> "id 1" Username
UserCommandsRepository o-l- UserCommands
UsersService --> UsersCommandSideKafkaAdapter : "uses"
UsersService --> UsersQuerySideKafkaAdapter : "uses"
UsersQuerySideKafkaAdapter --> UserCommandsRepository : "uses"
UserCommands -l[hidden]-> UserCommandErrors

@enduml
