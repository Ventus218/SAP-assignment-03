x-common_environment: &common_environment
  EBIKES_SERVICE_ADDRESS: ebikes:8080
  USERS_SERVICE_ADDRESS: users:8080
  RIDES_SERVICE_ADDRESS: rides:8080
  SMARTCITY_SERVICE_ADDRESS: smart-city:8080
  KAFKA_SERVICE_ADDRESS: kafka:9092

x-common_healthcheck: &common_healthcheck
  healthcheck:
    test: curl --fail localhost:8080/healthCheck || exit 1
    start_period: 20s
    start_interval: 1s
    interval: 60s
    timeout: 5s
    retries: 2
  restart: unless-stopped

services:
  ebikes:
    build:
      args:
        - executable=EBikes/executable.jar
    image: ventus218/sap-assignment-03-ebikes
    pull_policy: build
    networks:
      - private_network
    environment:
      <<: *common_environment
    depends_on:
      kafka:
        condition: service_healthy
      smart-city:
        condition: service_healthy
      rides:
        condition: service_healthy
    <<: *common_healthcheck

  users:
    build:
      args:
        - executable=Users/executable.jar
    image: ventus218/sap-assignment-03-users
    pull_policy: build
    networks:
      - private_network
    environment:
      <<: *common_environment
    depends_on:
      kafka:
        condition: service_healthy
    <<: *common_healthcheck

  rides:
    build:
      args:
        - executable=Rides/executable.jar
    image: ventus218/sap-assignment-03-rides
    pull_policy: build
    networks:
      - private_network
    environment:
      <<: *common_environment
    depends_on:
      kafka:
        condition: service_healthy
    <<: *common_healthcheck

  smart-city:
    build:
      args:
        - executable=SmartCity/executable.jar
    image: ventus218/sap-assignment-03-smart-city
    pull_policy: build
    networks:
      - private_network
    environment:
      <<: *common_environment
    <<: *common_healthcheck

  abikes-simulator:
    build:
      args:
        - executable=ABikesSimulator/executable.jar
    image: ventus218/sap-assignment-03-abikes-simulator
    pull_policy: build
    networks:
      - private_network
    environment:
      <<: *common_environment
    depends_on:
      smart-city:
        condition: service_healthy
      ebikes:
        condition: service_healthy
      rides:
        condition: service_healthy
    <<: *common_healthcheck

  kafka:
    image: apache/kafka:3.9.0
    networks:
      - private_network
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_LOG_RETENTION_MS: -1 # Infinite log retention
      KAFKA_LOG_MESSAGE_TIMESTAMP_TYPE: LogAppendTime # Timestamps are set by brokers an not producers
      # KAFKA_ALLOW_AUTO_CREATE_TOPICS: false
    healthcheck:
      test: /opt/kafka/bin/kafka-cluster.sh cluster-id --bootstrap-server kafka:9092 || exit 1
      interval: 1s
      timeout: 60s
      retries: 60

networks:
  private_network:
    driver: bridge
